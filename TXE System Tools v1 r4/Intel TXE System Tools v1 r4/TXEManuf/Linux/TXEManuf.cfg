// The end-of-line checks are broken into two categories. One is
// Variable Check, and the other is Configuration Check. If either
// of these check fails, by default TXEManuf will report error and
// continue on to the next check. If a user doesn't wish to continue
// when an error is found, ErrAction field can be used. Please see
// the examples here for detailed explaination:
//
//    SubTestName="TXE VSCC check", ErrAction="ErrorStop"
//
// If the above test fails, TXEManuf will report error and stop. There
// are total of three different error actions user can choose from:
//
// ErrorContinue - report error and continue on to the next check
// ErrorStop - report error and stop any check after the current one
// WarnContinue - report warning and continue on to the next check
//
// To add comment or take out a specific test, leave // at the start
// of a line. This file is processed by TXEManuf line by line as text
// file. Duplication of the same sub-tests are allowed, but TXEManuf
// will always perform the last test to the first test from the file.

// All string comparisions given in this file are case insensitive
// compare. There might be multiple field name/value pairs in one
// entry, but each field needs to be specified in the following
// format where <field name> can be replaced by SubTestName, ReqVal
// or ErrAction, <field value> can be replaced by any string including
// dash and/or spaces surrounded by double quotation marks, or hex-
// decimal number(s) that not surrounded by double quotation marks.
// In case of numeric value, each value (without 0x prefix) needs to
// be specified in byte and deliminated by spaces if there are multiple
// bytes. No line Wrapping is supported:
//
//    <field name>="<field value>", such as ReqVal=" ", or
//    <field name>=<numeric value>, such as ReqVal=78, or
//    <field name>=<numeric value>, such as ReqVal=01 0A 0F FE 7B CD

/////////////////////////////////////////////////////////////////////////////
// Intel recommends default end-of-line checks includes the following
// list. If a user chooses to use his/her own version of TXEManuf.cfg
// to skip or modify the error action of these checks as WarnContinue,
// TXEManuf will report failure with warnings when these checks are skipped,
// or have errors. It's suggested that a user should perform these Intel(R)
// recommended check on all type of SKUs.

SubTestName="EOP status check"
SubTestName="TXE VSCC check"
SubTestName="BIOS VSCC check"
SubTestName="TXE Manufacturing Mode status"
SubTestName="Flash Region Access Permissions"
SubTestName="CF9GR lock check"
SubTestName="FPF Global Valid bit check"
// SubTestName="Security Descriptor Override (SDO) check"

////////////////////////////////////////////////////////////////////////////////
// The following Configuration Check requires a user to enter an expected
// value after ReqVal=, otherwise the lines without ReqVal field values will
// be ignored.
//
// Please note that GBE version check will be skipped if Intel Gbe region
// is not present in SPI image.
//
// TXE FW version is a string as <major ver>.<minor ver>.<hotfix ver>.<build num>
// GBE version is a string as <major ver>.<minor ver>.<revision ver>
// BIOS version is string that vendor specific
////////////////////////////////////////////////////////////////////////////////

// SubTestName="TXE FW version", ReqVal=
// SubTestName="BIOS version", ReqVal=
// SubTestName="OEM Public Key Hash FPF", ReqVal=
// SubTestName="Perform Secure Boot FPF", ReqVal=
// SubTestName="Key Manifest ID FPF", ReqVal=
// SubTestName="PTT FPF", ReqVal=
// SubTestName="Alternative BIOS Limit FPF", ReqVal=

///////////////////////////////////////////////////////////////////////
// Variable Check - user needs to put an expected value after ReqVal,
// otherwise the lines without ReqVal field values will be ignored
//
// There are variables that stored in encrypted format. When comparing
// with these variables, ReqVal can only specified as numeric values
// (in encrypted form) in byte order as mentioned aboved. ReqVal needs
// to be surrounded by double quotation marks if they are string input.
//
// To get a up-to-dated TXEManuf.cfg with a complete variable names list,
// please run TXEManuf -cfggen <filename>. Please note that variables
// that have # need to be replace by a number. Here defines the number:
//
// Note: The '#' for hash variables should be replaced with an entry index.
//       The valid range is 0 to 22.
//
// !!! Please be sure to disable sending EOP or leave platform in ME
// !!! manufacturing mode to run this test, otherwise TXEManuf will
// !!! report failure because this feature is only available in factory
// !!! mode environment.
///////////////////////////////////////////////////////////////////////

// SubTestName="Allow Unsigned Assert Stolen", ReqVal=
// SubTestName="FeatureShipState", ReqVal=
// SubTestName="Flash Protection Override Policy Hard", ReqVal=
// SubTestName="Flash Protection Override Policy Soft", ReqVal=
// SubTestName="FW Update OEM ID", ReqVal=
// SubTestName="Intel (R) Anti-Theft BIOS Recovery Timer", ReqVal=
// SubTestName="Intel (R) Anti-Theft Technology Permanently Disabled?", ReqVal=
// SubTestName="Intel (R) Dynamic Application Loader Permanently Disabled?", ReqVal=
// SubTestName="Near Field Communication Enabled", ReqVal=
// SubTestName="Near Field Communication I2C Address", ReqVal=
// SubTestName="ODM ID used by Intel (R) Services", ReqVal=
// SubTestName="OEM_TAG", ReqVal=
// SubTestName="OEMSkuRule", ReqVal=
// SubTestName="PAVP Permanently Disabled?", ReqVal=
// SubTestName="Permit Period Timer Resolution", ReqVal=
// SubTestName="Reserved ID used by Intel (R) Services", ReqVal=
// SubTestName="System Integrator ID used by Intel (R) Services", ReqVal=
// SubTestName="TXEI TXE Region Unlockable", ReqVal=
